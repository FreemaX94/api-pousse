# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Backend & Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Lint Backend
        working-directory: backend
        run: |
          npm ci
          npm run lint
      - name: Lint Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run lint

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: lint
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Install & Test Backend
        working-directory: backend
        env:
          MONGODB_URI: mongodb://localhost:27017/api-pousse-test
          JWT_SECRET: testsecret
          SESSION_SECRET: testsecret
        run: |
          npm ci
          npm test

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Install & Test Frontend
        working-directory: frontend
        run: |
          npm ci
          npm test

  e2e:
    name: End-to-End (Cypress)
    runs-on: ubuntu-latest
    needs:
      - test-backend
      - test-frontend
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Start Backend (Staging)
        working-directory: backend
        run: |
          npm ci
          npm run dev &     # démarre le serveur (ex : sur le port défini)
          sleep 10          # attends qu’il soit prêt
      - name: Run Cypress Tests
        working-directory: frontend
        run: |
          npm ci
          npm run cypress:run

  security-scan:
    name: Security Scan (npm audit)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Audit Backend Dependencies
        working-directory: backend
        run: |
          npm ci
          npm audit --audit-level=high
      - name: Audit Frontend Dependencies
        working-directory: frontend
        run: |
          npm ci
          npm audit --audit-level=high

  performance:
    name: Performance Budget (Lighthouse CI)
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - uses: actions/checkout@v4
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12   # <-- mise à jour de la version de l’action :contentReference[oaicite:1]{index=1}
        with:
          configPath: .lighthouserc.json
          uploadArtifacts: true
